#!/bin/bash
#
# ONEDock - Docker support for ONE (as VMs)
# Copyright (C) GRyCAP - I3M - UPV 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../../onedock.sh
log_onedock_debug "$0 $@"
setup_frontend

# -------- Get cp and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="$XPATH_APP -b $DRV_ACTION"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/TYPE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/PATH)

unset i

DS_TYPE="${XPATH_ELEMENTS[i++]}"
SRC="${XPATH_ELEMENTS[i++]}"

# -------- Carry out the work ------------

split_dock_name "$SRC" SERVER USER IMAGE TAG

DOCKNAME=$(build_dock_name "$SERVER" "$USER" "$IMAGE" "$TAG")
onedock_exec_and_log "docker pull $DOCKNAME" "Error pulling $DOCKNAME"

LOCALDOCKNAME=$(build_dock_name "$LOCAL_SERVER" "" "$IMAGE_BASENAME" "$ID")
onedock_exec_and_log "docker tag -f $DOCKNAME $LOCALDOCKNAME" "Error creating tag $LOCALDOCKNAME for image $DOCKNAME in local repository"
onedock_exec_and_log "docker push $LOCALDOCKNAME" "Error pushing tag $LOCALDOCKNAME" # 1>&2> /dev/null
onedock_exec_and_log "docker rmi $DOCKNAME" # 1>&2> /dev/null
onedock_exec_and_log "docker rmi $LOCALDOCKNAME" # 1>&2> /dev/null
log_onedock "image \"$DOCKNAME\" successfully pushed into \"$LOCALDOCKNAME\""
log_onedock "-----------------------------"
exit 0
